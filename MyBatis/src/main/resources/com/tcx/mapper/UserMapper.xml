<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 特殊字符处理：1、转义字符。   2、CDATA区-->

<mapper namespace="com.tcx.mapper.UserMapper">

    <delete id="deleteByIds">
        delete from user
        where id in (
        <foreach collection="ids" item="id" separator=",">
            #{id}
        </foreach>
        )
<!--    MyBatis会将数组参数封装为一个Map集合 解决：1、默认array = 数组   2、使用@Param注解改变默认map名称  -->
    </delete>


    <insert id="insertUser" useGeneratedKeys="true" keyProperty="id">
        insert into user(StuClass,StuName,Sex,Age)
        values(#{StuClass},#{StuName},#{Sex},#{Age})
    </insert>



    <sql id="user_column">
        Id, StuClass, StuName, Sex, Age
    </sql>

    <!--
        与数据库名字不同时可以取别名  as
    -->
    <select id="selectAll" resultType="User">
<!--        select * from user-->
        select
        <include refid="user_column"/>
        from user
    </select>

<!--
    resultMap /type：映射的类型
    id：主键字段映射
    result：一般字段
-->

<!--    <resultMap id="userResultMapper" type="User">-->
<!--        <result />-->
<!--        <id />-->
<!--    </resultMap>-->

<!--    <select id="selectAll" resultMap="userResultMapper">-->
<!--        &lt;!&ndash;        select * from user&ndash;&gt;-->
<!--        select * from user-->
<!--    </select>-->

    <select id="selectById" parameterType="int" resultType="com.tcx.domain.User">
<!--
    #{}：会将其替换为？，为了防止SQL注入
    ${}：拼SQL，存在SQL注入的问题，一般在表名或者列名不固定的情况下使用

-->
        select * from user where id = #{id};
    </select>
    <select id="selectCondition" resultType="com.tcx.domain.User">
        select * from user
        where 1 = 1
<!--        动态SQL   and问题：1、恒等式  2、直接使用<where>（无敌）    -->
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="companyName != null and companyName !=''">
                and companyName like #{companyName}
            </if>
    </select>
</mapper>